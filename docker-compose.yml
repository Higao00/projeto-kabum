services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - php-api
      - frontend

  php-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: php-api
    expose:
      - '80'

    env_file:
      - .env

    volumes:
      - ./api:/var/www/html
      - ./.env:/var/www/html/.env
      - ./api/vendor:/var/www/html/vendor
      - ./api/composer.json:/var/www/html/composer.json

    networks:
      - app-network
    depends_on:
      - db
    command: >
      sh -c "composer install --no-dev --optimize-autoloader && php -S 0.0.0.0:80 -t public"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: next-frontend
    ports:
      - '3000:3000' # Porta exposta
    networks:
      - app-network
    depends_on:
      - php-api
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"
      command: >
        sh -c "npm install && npm run dev"


  db:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - '3306:3306'
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: kabum
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql-db
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - '8080:80'
    networks:
      - app-network
    depends_on:
      - db

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
